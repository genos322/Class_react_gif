{"version":3,"sources":["Componentes/AddCategory.js","Helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","GitSearchApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftSearchApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mKAIaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,cAE7B,EAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEC,sBAAMC,SAfc,SAACC,GAErBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAG9BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQf,SACC,uBAAOO,KAAK,OACXC,MAAOT,EACPU,SAvBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCRZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAITC,EAJS,iDAIwCC,UAAUH,GAJlD,+DAKII,MAAMF,GALV,cAKTG,EALS,gBAMMA,EAAKC,OANX,uBAMRC,EANQ,EAMRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ3B,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAKR,IACtB,kCAAKA,EAAL,WCFCS,EAAU,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAGrB,ECLuB,SAACA,GAExB,MAAyBd,mBAAS,CAC9BqB,KAAK,GACLe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAIvB,CAACtB,IACIuB,EDZyBK,CAAa5B,GAAhCa,EAAb,EAAON,KAAee,EAAtB,EAAsBA,QAQlB,OACI,qCACA,6BAAMtB,IACLsB,GAAW,2CACZ,qBAAKJ,UAAU,WAAf,SAGQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEIA,GADGA,EAAIC,aErBtBkB,EAAgB,WAIrB,MAAoC3C,mBAAS,CAAC,eAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,gCACI,4CAED,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACC,6BAEQ6C,EAAWrB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAYA,GADLA,QAMvB,cAAC,EAAD,oB,gBCvBV+B,G,MAAUC,SAASC,cAAc,UAGvCC,IAASC,OAAO,cAAC,EAAD,IAAiCJ,K","file":"static/js/main.f24c3d60.chunk.js","sourcesContent":["import React, { useState }  from \"react\";\r\nimport  PropTypes  from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ( {setCategories}) =>{\r\n\r\n\tconst [inputValue, setInputValue] = useState('as');\r\n\r\n\tconst handleInputChange = (e)=>{\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\t// onsubmit o onchange es el event\r\n\t\r\n\tconst handleSubmit = (e)=>\r\n\t{\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tsetCategories(cats => [ inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<form onSubmit={ handleSubmit}>\r\n\t\t\t<input type=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange }>\r\n\t\t\t\r\n\t\t\t</input>\r\n\t\t</form>\r\n\t\t\r\n\t);\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\nexport const getGifs = async(category)=>{\r\n\r\n\r\n    \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=hPiCkQ2nqU5Ni3J7UrFu9fjvM8tjWdmA`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n        \r\n    return gifs;\r\n        //getGifs();\r\n  \r\n    \r\n    \r\n    }\r\n  ","import React from \"react\";\r\n//Para recibir imagen\r\nexport const GifGridItem = ({id, title, url} )=>{\r\n    console.log(id, title, url);\r\n    return(\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../Helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category})=>{\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data: images , loading} =useFetchGifs(category);\r\n\r\n    // useEffect( ()=>{\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // }, [category] );\r\n    \r\n \r\n        return(\r\n            <>\r\n            <h3>{ category }</h3>\r\n            {loading && <p>loading...</p>}\r\n            <div className='cardGrid'>\r\n                {\r\n                    \r\n                    images.map((img)=>(\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}        //  img = {img}\r\n                         />\r\n                    ))\r\n                }\r\n         \r\n            </div>\r\n            </>\r\n        )\r\n    \r\n    \r\n    }\r\n  ","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs =(category)=>{\r\n    //snipet us y tab\r\n    const [state, setState]= useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n            \r\n              })\r\n    });\r\n    },[category]);\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { GifGrid } from './Componentes/GifGrid';\r\n\r\nexport const GiftSearchApp = ()=>{\r\n\r\n     \r\n\r\n        const [categories, setCategories] = useState(['One Piece ']);\r\n\r\n        // const handleAdd = ()=>{                                 //Agregando elementos al array   \r\n        //      setCategories([ 'Black clover', ...categories]);\r\n        //     // setCategories( cats =>['DBSuper',...cats]);      //otro m√©todo\r\n        // }\r\n        return(\r\n            <div>\r\n                <h2>GIFTSEARCH</h2>\r\n                \r\n               <AddCategory setCategories={setCategories}></AddCategory>\r\n               <hr/>\r\n                <ol>\r\n                    {\r\n                        categories.map((category)=>(\r\n                            <GifGrid\r\n                                key = {category}\r\n                                category = {category}\r\n                            />\r\n                             ))\r\n                    }\r\n                </ol>\r\n                <GifGrid> </GifGrid>\r\n            </div>\r\n        );\r\n\r\n};\r\n","import React from 'react';\r\n\r\nimport { GiftSearchApp } from './GitSearchApp';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst divRoot = document.querySelector('#root');\r\n//Rederizando page\r\n// ReactDOM.render(<CounterApp></CounterApp>, divRoot);\r\nReactDOM.render(<GiftSearchApp></GiftSearchApp>, divRoot);\r\n"],"sourceRoot":""}